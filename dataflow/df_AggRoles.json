{
	"name": "df_AggRoles",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RolesJsonInput",
						"type": "DatasetReference"
					},
					"name": "RoleSyncJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "RolesJsonOutput",
						"type": "DatasetReference"
					},
					"name": "AggregatedJson"
				}
			],
			"transformations": [
				{
					"name": "AggBasedOnStudentId"
				}
			],
			"scriptLines": [
				"source(output(",
				"          APP_ROLE as string,",
				"          CHANGE_DATE_TIME as string,",
				"          CHANGE_TYPE as string,",
				"          MDX_EMAIL_ADDRESS as string,",
				"          MDX_USER_IDENTIFIER as string,",
				"          ROW_ID_KEY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['input.json'],",
				"     partitionBy('hash', 1)) ~> RoleSyncJSON",
				"RoleSyncJSON aggregate(groupBy(MDX_USER_IDENTIFIER),",
				"     roles = collect(@(approle=APP_ROLE, changetype=CHANGE_TYPE)),",
				"     partitionBy('hash', 1)) ~> AggBasedOnStudentId",
				"AggBasedOnStudentId sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> AggregatedJson"
			]
		}
	}
}